/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;   
 
import javax.swing.JOptionPane;   
import entities.*; 
import schedulers.*; 
import structures.*;
import structures.queue.QueueList;
import utils.*;  

  
public class TelaEndereço extends javax.swing.JFrame {

    /**
     * Creates new form TelaEndereço
     */
    public TelaEndereço() {
        initComponents();
    }

    public void escalonar(){
        String endereco = txt_endereco.getText();
        String modo = cmb_modo.getSelectedItem().toString();  
        String salvar = cmb_salvar.getSelectedItem().toString(); 

        if (endereco.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Insira um caminho de arquivo!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int quantum = 0;
    if (modo.equals("RR")) { 
        try {
            quantum = Integer.parseInt(txt_quantum.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Insira um número válido para o quantum!", "Erro", JOptionPane.ERROR_MESSAGE); 
            return; 
        } 
    }

        try {
        // Lê o arquivo       
        Processes[] processesArray = FileHandler.readFile(endereco);                
        if (processesArray == null) {
            JOptionPane.showMessageDialog(this, "Erro ao ler o arquivo.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int capacity = processesArray.length;
        QueueList<Processes> queue = new QueueList<>(capacity);            
 
        // Aplicar o algoritmo de escalonamento escolhido
        switch (modo) {
            case "FCFS":
                // Exemplo de algoritmo FCFS
                FCFS fcfs = new FCFS();
                queue = fcfs.scheduler(processesArray);    
                break;
            case "SJF":
                // Exemplo de algoritmo SJF
                SJF sjf = new SJF();
                queue = sjf.scheduler(processesArray);  
                break;
            case "Priority":
                // Exemplo de algoritmo de prioridade
                Priority priorityScheduler = new Priority();  
                queue = priorityScheduler.scheduler(processesArray); 
                break;
            case "RR":
                // Exemplo de algoritmo Round Robin (caso tenha)
                RoundRobin rrScheduler = new RoundRobin(quantum);    
                queue = rrScheduler.scheduler(processesArray);    
                break;
            default:
                JOptionPane.showMessageDialog(this, "Modo de escalonamento desconhecido.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
        }

        // Escreve o arquivo de saída  
        String format = "";
        if (salvar.equals(".txt")) {
            format = ".txt";
        } else if (salvar.equals(".csv")) {
            format = ".csv";
        } else {
            System.out.println(Color.ANSI_RED + "Invalid option" + Color.ANSI_RESET);
        }
        
        String arquivosaida = modo + format;

        FileHandler.writeFile("tests\\output\\" + arquivosaida, queue, modo, quantum); 
        
        System.err.println("Arquivo escrito com SUCESSO");
        JOptionPane.showMessageDialog(this, "Arquivo processado com sucesso!\nSaída: " + arquivosaida, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Erro ao processar o arquivo: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_endereco = new javax.swing.JTextField();
        bnt_escalonar = new javax.swing.JButton();
        cmb_modo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txt_quantum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmb_salvar = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        txt_endereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_enderecoActionPerformed(evt);
            }
        });

        bnt_escalonar.setText("Escalonar");
        bnt_escalonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_escalonarActionPerformed(evt);
            }
        });

        cmb_modo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FCFS", "SJF", "RR", "Priority" }));

        jLabel1.setText("Endereço:");

        jLabel2.setText("Quantum:");

        cmb_salvar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".txt", ".csv" }));

        jLabel3.setText("Salvar Como:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(bnt_escalonar)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txt_quantum, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txt_endereco, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmb_modo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_modo))
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_quantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmb_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(bnt_escalonar)
                .addGap(16, 16, 16))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_enderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_enderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_enderecoActionPerformed

    private void bnt_escalonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_escalonarActionPerformed
        // TODO add your handling code here:
        escalonar(); 
    }//GEN-LAST:event_bnt_escalonarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEndereço.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEndereço.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEndereço.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEndereço.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaEndereço().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_escalonar;
    private javax.swing.JComboBox<String> cmb_modo;
    private javax.swing.JComboBox<String> cmb_salvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txt_endereco;
    private javax.swing.JTextField txt_quantum;
    // End of variables declaration//GEN-END:variables
}
